apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: linkerd-service-mirror
  annotations:
    {{.Values.createdByAnnotation}}: {{default (printf "linkerd/helm %s" .Values.linkerdVersion) .Values.cliVersion}}
  labels:
    app.kubernetes.io/name: mirror
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: {{.Values.linkerdVersion}}
    app: {{.Values.namespace}}
spec:
  allowedCapabilities:
  - NET_ADMIN
  - NET_RAW
  allowPrivilegeEscalation: false
  fsGroup:
    rule: RunAsAny
  hostIPC: false
  hostNetwork: false
  hostPID: false
  privileged: false
  runAsGroup:
    rule: RunAsAny
  runAsUser:
    rule: MustRunAs
    ranges:
      - min: 2103
        max: 2103
  seLinux:
    rule: RunAsAny
  supplementalGroups:
    rule: RunAsAny
  volumes:
    - 'emptyDir'
    - 'secret'
    - 'configMap'
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-service-mirror-psp
  annotations:
    {{.Values.createdByAnnotation}}: {{default (printf "linkerd/helm %s" .Values.linkerdVersion) .Values.cliVersion}}
  labels:
    app.kubernetes.io/name: mirror
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: {{.Values.linkerdVersion}}
    app: {{.Values.namespace}}
rules:
- apiGroups:
  - policy
  resources:
  - podsecuritypolicies
  verbs:
  - use
  resourceNames:
  - linkerd-service-mirror
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: linkerd-service-mirror-psp
  annotations:
    {{.Values.createdByAnnotation}}: {{default (printf "linkerd/helm %s" .Values.linkerdVersion) .Values.cliVersion}}
  labels:
    app.kubernetes.io/name: mirror
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: {{.Values.linkerdVersion}}
    app: {{.Values.namespace}}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
#  name: linkerd-service-mirror-psp
  name: privileged-psp-user
subjects:
  - kind: ServiceAccount
    name: linkerd-service-mirror
    namespace: {{ .Values.namespace}}
